# SSDLite with Mobilenet v2 configuration for MSCOCO Dataset.
# Users should configure the fine_tune_checkpoint field in the train config as
# well as the label_map_path and input_path fields in the train_input_reader and
# eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that
# should be configured.

model {
  ssd {
    inplace_batchnorm_update: true
    freeze_batchnorm: false
    num_classes: 1
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        matched_threshold: 0.5
        unmatched_threshold: 0.5
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
        use_matmul_gather: true
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    encode_background_as_zeros: true
    anchor_generator {
      multiscale_anchor_generator {
        min_level: 3
        max_level: 6
        anchor_scale: 4.0
        aspect_ratios: [1.0, 2.0, 0.5, 3.0, 5.0, 0.2]
        scales_per_octave: 4
      }
    }
    image_resizer {
      fixed_shape_resizer {
        height: 1082
        width: 1920
      }
    }
    box_predictor {
      weight_shared_convolutional_box_predictor {
        depth: 256
        class_prediction_bias_init: -4.6
        conv_hyperparams {
          activation: RELU_6,
          regularizer {
            l2_regularizer {
              weight: 0.00004
            }
          }
          initializer {
            random_normal_initializer {
              stddev: 0.01
              mean: 0.0
            }
          }
          batch_norm {
            scale: true,
            decay: 0.997,
            epsilon: 0.001,
          }
        }
        num_layers_before_predictor: 4
        kernel_size: 3
      }
    }
    feature_extractor {
      type: 'ssd_mobilenet_v1_fpn'
      fpn {
        min_level: 3
        max_level: 6
      }
      min_depth: 16
      depth_multiplier: 1.0
      conv_hyperparams {
        activation: RELU_6,
        regularizer {
          l2_regularizer {
            weight: 0.00004
          }
        }
        initializer {
          random_normal_initializer {
            stddev: 0.01
            mean: 0.0
          }
        }
        batch_norm {
          scale: true,
          decay: 0.997,
          epsilon: 0.001,
        }
      }
      override_base_feature_extractor_hyperparams: true
    }
    loss {
      classification_loss {
        weighted_sigmoid {
        }
      }
      localization_loss {
        weighted_smooth_l1 {
        }
      }
      hard_example_miner {
        num_hard_examples: 3000
        iou_threshold: 0.99
        loss_type: CLASSIFICATION
        max_negatives_per_positive: 3
        min_negatives_per_image: 3
      }
      classification_weight: 1.0
      localization_weight: 1.0
    }
    normalize_loss_by_num_matches: true
    post_processing {
      batch_non_max_suppression {
        score_threshold: 1e-8
        iou_threshold: 0.6
        max_detections_per_class: 100
        max_total_detections: 100
      }
      score_converter: SIGMOID
    }
  }
}

train_config: {  
  batch_size: 4
  sync_replicas: true
  startup_delay_steps: 0
  replicas_to_aggregate: 1
  num_steps: 500000  
  optimizer {
    #adam_optimizer:{
      #learning_rate: {
        #manual_step_learning_rate:{
          #initial_learning_rate: 0.1
          #schedule:{
            #step:20000
            #learning_rate:0.01
          #}
          #schedule:{
            #step:120000
            #learning_rate:0.001
          #}
          #schedule:{
            #step:200000
            #learning_rate:0.0001
          #}
          #schedule:{
            #step:280000
            #learning_rate:0.00001
          #} 
        #}
      #}
    #} 
    
    momentum_optimizer: {
      learning_rate: {
		manual_step_learning_rate:{
          initial_learning_rate: 0.0025
          schedule:{
            step:25000
            learning_rate:0.00075
          }
		  schedule:{
            step:50000
            learning_rate:0.00025
          }
		  schedule:{
            step:75000
            learning_rate:0.000075
          }
          schedule:{
            step:100000
            learning_rate:0.000025
          }
          schedule:{
            step:120000
            learning_rate:0.0000075
          }
          schedule:{
            step:160000
            learning_rate:0.00000025
          } 
        }
      }
      momentum_optimizer_value: 0.9
    }   
  }
  fine_tune_checkpoint: "/opt/yushan/models/research/object_detection/ssd_mobilenet_v1_fpn_shared_box_predictor_640x640_coco14_sync_2018_07_03/model.ckpt"
  from_detection_checkpoint: true
  load_all_detection_checkpoint_vars: true
  data_augmentation_options {
    random_horizontal_flip {
    }
  }
  #data_augmentation_options {
  #  random_crop_image {
  #    min_object_covered: 0.0
  #    min_aspect_ratio: 0.75
  #    max_aspect_ratio: 3.0
  #    min_area: 0.75
  #    max_area: 1.0
  #    overlap_thresh: 0.0
  #  }
  #}
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false
}

train_input_reader: {
  tf_record_input_reader {
    input_path: "/opt/yushan/oil_vehicle_person_10cls/data/pascal_train.record"
  }
  label_map_path: "/opt/yushan/oil_vehicle_person_10cls/data/pascal_label_map.pbtxt"
}

eval_config: {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
  num_examples: 1077
  include_metrics_per_category:true 
}

eval_input_reader: {
  tf_record_input_reader {
    input_path: "/opt/yushan/oil_vehicle_person_10cls/data/pascal_trainval.record"
  }
  label_map_path: "/opt/yushan/oil_vehicle_person_10cls/data/pascal_label_map.pbtxt"
  shuffle: false
  num_readers: 1
}